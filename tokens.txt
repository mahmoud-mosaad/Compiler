EOL \n
PLUS +
LEFT_CURLY_B {
RIGHT_CURLY_B }
LEFT_SQUARE_B [
RIGHT_SQUARE_B ]
LEFT_ROUND_B (
RIGHT_ROUND_B )
COMMA ,
SEMICOLON ;
DOT .
NOT !
ASSIGNMENT =
EQUAL ==
NOT_EQUAL !=
AND &&
OR ||
MINUS -
MULTIPLY *
DIV /
MOD %
LESSTHAN <
GREATERTHAN >
LESS_EQ <=
GREATER_EQ >=
IF if
INT int
ELSE else
MAIN main
THIS this
TRUE true
VOID void
CLASS class
FALSE false
WHILE while
LENGTH length
PUBLIC public
PRIVATE private
PROTECTED protected
RETURN return
STATIC static
NEW new
STRING String
FLOAT float
CHARACTER char
BOOLEAN boolean
EXTENDS extends
NULL null
ABSTRACT abstract
ASSERT assert
BREAK break
CONTINUE continue
BYTE byte
CASE case
CATCH catch
CONST const
DEFAULT default
DO do
DOUBLE double
ENUM ENUM
FINAL final
FINALLY finally
FOR for
GOTO goto
IMPLEMENTS implements
IMPORT import
PACKAGE package
INSTANCEOF instanceof
INTERFACE interface
SHORT short
SUPER super
SWITCH switch
THROW throw
TRY try
SYSTEM.OUT.PRINTLN System.out.println
INTEGRAL_LITERAL 0
FLOAT_LITERAL 0.0
STRING_LITERAL "
ID Var
S_COMMENTS //
M_COMMENTS /*
A_CHAR '